'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = fetchCorreiosService;

var _xml2js = require('xml2js');

var _xml2js2 = _interopRequireDefault(_xml2js);

var _lodash = require('lodash.get');

var _lodash2 = _interopRequireDefault(_lodash);

var _isomorphicFetch = require('isomorphic-fetch');

var _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);

var _service = require('../errors/service.js');

var _service2 = _interopRequireDefault(_service);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var parseXMLString = _xml2js2.default.parseString;

function fetchCorreiosService(cepWithLeftPad) {
  var url = 'https://apps.correios.com.br/SigepMasterJPA/AtendeClienteService/AtendeCliente';
  var options = {
    method: 'POST',
    body: '<?xml version="1.0"?>\n<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cli="http://cliente.bean.master.sigep.bsb.correios.com.br/">\n  <soapenv:Header />\n  <soapenv:Body>\n    <cli:consultaCEP>\n      <cep>' + cepWithLeftPad + '</cep>\n    </cli:consultaCEP>\n  </soapenv:Body>\n</soapenv:Envelope>',
    mode: 'no-cors',
    headers: {
      'Content-Type': 'text/xml; charset=utf-8',
      'cache-control': 'no-cache'
    }
  };

  return (0, _isomorphicFetch2.default)(url, options).then(analyzeAndParseResponse).then(resolvePromise).catch(throwApplicationError);
}

function analyzeAndParseResponse(response) {
  if (response.ok) {
    return response.text().then(parseXML).then(extractValuesFromSuccessResponse);
  }

  return response.text().then(parseXML).then(extractErrorMessage).then(throwCorreiosError);
}

function parseXML(xmlString) {
  return new Promise(function (resolve, reject) {
    parseXMLString(xmlString, function (err, responseObject) {
      if (!err) {
        resolve(responseObject);
      }

      throw new Error('Não foi possível interpretar o XML de resposta.');
    });
  });
}

function extractErrorMessage(xmlObject) {
  return (0, _lodash2.default)(xmlObject, 'soap:Envelope.soap:Body[0].soap:Fault[0].faultstring[0]');
}

function throwCorreiosError(translatedErrorMessage) {
  throw new Error(translatedErrorMessage);
}

function extractValuesFromSuccessResponse(xmlObject) {
  var addressValues = (0, _lodash2.default)(xmlObject, 'soap:Envelope.soap:Body[0].ns2:consultaCEPResponse[0].return[0]');

  return {
    cep: (0, _lodash2.default)(addressValues, 'cep[0]'),
    state: (0, _lodash2.default)(addressValues, 'uf[0]'),
    city: (0, _lodash2.default)(addressValues, 'cidade[0]'),
    neighborhood: (0, _lodash2.default)(addressValues, 'bairro[0]'),
    street: (0, _lodash2.default)(addressValues, 'end[0]')
  };
}

function resolvePromise(cepObject) {
  resolve(cepObject);
}

function throwApplicationError(error) {
  var serviceError = new _service2.default({
    message: error.message,
    service: 'correios'
  });

  if (error.name === 'FetchError') {
    serviceError.message = 'Erro ao se conectar com o serviço dos Correios.';
  }

  throw serviceError;
}
module.exports = exports['default'];